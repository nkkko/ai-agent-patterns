---
description: Guidelines for creating diagrams for the book with focus on Mermaid
globs: ["images/mermaid/*.md", "chapters/*.md"]
alwaysApply: false
---
{
  "name": "Diagram Creation",
  "description": "Standards for creating visual diagrams for the Agentic AI Design Patterns book",
  "pattern": {
    "intent": ["create diagram", "add mermaid diagram", "visualize concept", "diagram standards"]
  },
  "action": {
    "type": "text",
    "text": "# Diagram Creation Guidelines\n\n## Principles\n\n1. **Prefer Mermaid diagrams** over any other method for creating diagrams in the book\n2. **Conceptual clarity** over implementation details\n3. **Visual consistency** across all diagrams\n4. **Simple but informative** - diagrams should be easily understood\n\n## Diagram Types and When to Use Them\n\n### Flowcharts\nUse for:\n- Process flows\n- Decision paths\n- High-level algorithms\n\n```mermaid\nflowchart TD\n    A[Start] --> B[Process]\n    B --> C{Decision}\n    C -->|Yes| D[Action 1]\n    C -->|No| E[Action 2]\n    D --> F[End]\n    E --> F\n```\n\n### Sequence Diagrams\nUse for:\n- Interactions between components\n- Message passing\n- Temporal processes\n\n```mermaid\nsequenceDiagram\n    participant A as Component A\n    participant B as Component B\n    \n    A->>B: Request\n    B-->>A: Response\n```\n\n### Class Diagrams\nUse for:\n- Component relationships\n- Architectural structures\n- Pattern implementation structures\n\n```mermaid\nclassDiagrAgentic AI Design Patterns{\n        +attribute\n        +operation()\n    }\n    \n    Component <|-- Subcomponent\n```\n\n### State Diagrams\nUse for:\n- State transitions\n- Lifecycle representations\n- Status changes\n\n```mermaid\nstateDiagram-v2\n    [*] --> State1\n    State1 --> State2\n    State2 --> [*]\n```\n\n## Diagram Storage and Reference\n\n1. **Standalone diagrams** should be stored in `images/mermaid/` directory with descriptive filenames\n2. **Chapter-specific diagrams** can be embedded directly in the chapter markdown\n3. **Reference standalone diagrams** using:\n   ```markdown\n   ![Diagram Title](mdc:../images/mermaid/diagram_filename.md)\n   ```\n\n## Visual Style Guide\n\nAll diagrams should follow this style guide for consistency:\n\n- **Colors:**\n  - Primary: #4B0082 (Indigo)\n  - Secondary: #9370DB (Medium Purple)\n  - Highlight: #FF6347 (Tomato)\n  - Success: #2E8B57 (Sea Green)\n  - Warning: #DAA520 (Goldenrod)\n\n- **Labels:** Use clear, concise text that describes purpose\n\n- **Size:** Diagrams should be readable but not excessive in size\n\n- **Complexity:** Keep diagrams focused on one concept - create multiple diagrams if needed rather than one complex diagram"
  },
  "examples": [
    {
      "input": "What standards should I follow for diagrams in my chapter?",
      "output": "For diagrams in your chapter, follow these guidelines:\n\n1. **Use Mermaid diagrams exclusively** for visual representation\n\n2. **Choose the appropriate diagram type**:\n   - Flowcharts for processes and decision paths\n   - Sequence diagrams for component interactions\n   - Class diagrams for structural relationships\n   - State diagrams for state transitions\n\n3. **Follow the style guide**:\n   - Use the book's color scheme (Indigo for primary, Medium Purple for secondary, etc.)\n   - Keep labels concise and descriptive\n   - Maintain visual consistency with other diagrams\n\n4. **Focus on concepts rather than implementations**:\n   - Highlight relationships and patterns\n   - Abstract away unnecessary details\n   - Ensure the diagram communicates one clear idea\n\n5. **For reusable diagrams**:\n   - Save them in the images/mermaid/ directory\n   - Reference them in chapters using the proper syntax\n\nThis approach ensures diagrams enhance understanding without overwhelming readers with implementation details."
    }
  ]
}