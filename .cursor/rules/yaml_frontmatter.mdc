---
description: Standards for YAML frontmatter in book chapters
globs: chapters/*.md
alwaysApply: false
---
{
  "name": "YAML Frontmatter",
  "description": "Ensures consistent YAML frontmatter in all book chapters for the AI Agent Design Patterns book",
  "pattern": {
    "intent": ["add frontmatter", "create frontmatter", "fix frontmatter", "update frontmatter", "standardize frontmatter", "yaml header"]
  },
  "action": {
    "type": "code",
    "code": "try {\n  const filePath = document.fileName;\n  const chapterMatch = filePath.match(/chapters\\/(\\d+)_([\\w_]+)\\.md/);\n  \n  if (!chapterMatch) {\n    return \"This doesn't appear to be a chapter file. Frontmatter can only be added to chapter files in the chapters/ directory.\";\n  }\n  \n  const chapterNum = parseInt(chapterMatch[1], 10);\n  const chapterSlug = chapterMatch[2];\n  \n  // Format the chapter title from the slug\n  const chapterTitle = chapterSlug\n    .split('_')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n  \n  // Get the current date for the last updated field\n  const today = new Date();\n  const formattedDate = today.toISOString().split('T')[0]; // YYYY-MM-DD format\n  \n  // Determine authors from input or use default\n  let authors = ['Nikola Novakovic'];\n  const authorMatch = input.match(/authors?:\\s*([\\w\\s,]+)/i);\n  if (authorMatch) {\n    authors = authorMatch[1].split(',').map(a => a.trim());\n  }\n  \n  // Determine status from input or use default\n  let status = 'draft';\n  if (input.toLowerCase().includes('status: review')) {\n    status = 'review';\n  } else if (input.toLowerCase().includes('status: published')) {\n    status = 'published';\n  }\n  \n  // Determine tag keywords from chapter content\n  let tags = ['ai', 'agents', 'patterns'];\n  \n  // Add chapter specific tags based on chapter number\n  const chapterTags = {\n    1: ['building blocks', 'foundations', 'agent architecture'],\n    2: ['architectural patterns', 'core design', 'agent components'],\n    3: ['tool integration', 'api', 'external services'],\n    4: ['memory', 'state management', 'persistence'],\n    5: ['multi-agent', 'collaboration', 'agent teams'],\n    6: ['case studies', 'real-world examples', 'applications']\n  };\n  \n  if (chapterTags[chapterNum]) {\n    tags = [...tags, ...chapterTags[chapterNum]];\n  }\n  \n  // Additional tags from input\n  const tagMatch = input.match(/tags?:\\s*([\\w\\s,\\-]+)/i);\n  if (tagMatch) {\n    const inputTags = tagMatch[1].split(',').map(t => t.trim());\n    tags = [...new Set([...tags, ...inputTags])];\n  }\n  \n  // Create the frontmatter template\n  const frontmatter = `---\ntitle: \"Chapter ${chapterNum}: ${chapterTitle}\"\ndescription: \"A comprehensive guide to ${chapterTitle.toLowerCase()} in AI agent design\"\nauthors: [${authors.map(a => `\"${a}\"`).join(', ')}]\ndate: ${formattedDate}\nlast_updated: ${formattedDate}\nstatus: ${status}\nchapter: ${chapterNum}\ntags: [${tags.map(t => `\"${t}\"`).join(', ')}]\n---`;\n  \n  // Check if the document already has frontmatter\n  const docText = document.getText();\n  const hasFrontmatter = docText.trim().startsWith('---');\n  \n  let result = '';\n  if (hasFrontmatter) {\n    result = `I've created standardized frontmatter to replace the existing frontmatter in your chapter file:\\n\\n\\`\\`\\`yaml\\n${frontmatter}\\n\\`\\`\\`\\n\\nReplace the existing frontmatter at the top of your file with this standardized version.`;\n  } else {\n    result = `I've created standardized frontmatter for your chapter file:\\n\\n\\`\\`\\`yaml\\n${frontmatter}\\n\\`\\`\\`\\n\\nAdd this at the very beginning of your chapter file, before any other content.`;\n  }\n  \n  // Add explanation\n  result += '\\n\\nThis frontmatter ensures consistency across all chapters and provides important metadata for:\n\\n- Chapter identification and ordering\\n- Content description\\n- Authorship attribution\\n- Version tracking\\n- Status indication (draft, review, or published)\\n- Keyword tagging for search and categorization';\n  \n  return result;\n} catch (error) {\n  return `Error creating frontmatter: ${error.message}`;\n}"
  },
  "examples": [
    {
      "input": "Add frontmatter to this chapter",
      "output": "I've created standardized frontmatter for your chapter file:\n\n```yaml\n---\ntitle: \"Chapter 1: Building Blocks Of Software Agents\"\ndescription: \"A comprehensive guide to building blocks of software agents in AI agent design\"\nauthors: [\"Nikola Novakovic\"]\ndate: 2023-11-15\nlast_updated: 2023-11-15\nstatus: draft\nchapter: 1\ntags: [\"ai\", \"agents\", \"patterns\", \"building blocks\", \"foundations\", \"agent architecture\"]\n---\n```\n\nAdd this at the very beginning of your chapter file, before any other content.\n\nThis frontmatter ensures consistency across all chapters and provides important metadata for:\n\n- Chapter identification and ordering\n- Content description\n- Authorship attribution\n- Version tracking\n- Status indication (draft, review, or published)\n- Keyword tagging for search and categorization"
    },
    {
      "input": "Update frontmatter with status: review and tags: planning, execution, agents",
      "output": "I've created standardized frontmatter to replace the existing frontmatter in your chapter file:\n\n```yaml\n---\ntitle: \"Chapter 1: Building Blocks Of Software Agents\"\ndescription: \"A comprehensive guide to building blocks of software agents in AI agent design\"\nauthors: [\"Nikola Novakovic\"]\ndate: 2023-11-15\nlast_updated: 2023-11-15\nstatus: review\nchapter: 1\ntags: [\"ai\", \"agents\", \"patterns\", \"building blocks\", \"foundations\", \"agent architecture\", \"planning\", \"execution\"]\n---\n```\n\nReplace the existing frontmatter at the top of your file with this standardized version.\n\nThis frontmatter ensures consistency across all chapters and provides important metadata for:\n\n- Chapter identification and ordering\n- Content description\n- Authorship attribution\n- Version tracking\n- Status indication (draft, review, or published)\n- Keyword tagging for search and categorization"
    }
  ]
}